# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.features import Features  # noqa: F401,E501
from swagger_server.models.value import Value  # noqa: F401,E501
from swagger_server import util


class MidPriceResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, value: Value=None, features: Features=None):  # noqa: E501
        """MidPriceResponse - a model defined in Swagger

        :param value: The value of this MidPriceResponse.  # noqa: E501
        :type value: Value
        :param features: The features of this MidPriceResponse.  # noqa: E501
        :type features: Features
        """
        self.swagger_types = {
            'value': Value,
            'features': Features
        }

        self.attribute_map = {
            'value': 'value',
            'features': 'Features'
        }
        self._value = value
        self._features = features

    @classmethod
    def from_dict(cls, dikt) -> 'MidPriceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MidPriceResponse of this MidPriceResponse.  # noqa: E501
        :rtype: MidPriceResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self) -> Value:
        """Gets the value of this MidPriceResponse.


        :return: The value of this MidPriceResponse.
        :rtype: Value
        """
        return self._value

    @value.setter
    def value(self, value: Value):
        """Sets the value of this MidPriceResponse.


        :param value: The value of this MidPriceResponse.
        :type value: Value
        """

        self._value = value

    @property
    def features(self) -> Features:
        """Gets the features of this MidPriceResponse.


        :return: The features of this MidPriceResponse.
        :rtype: Features
        """
        return self._features

    @features.setter
    def features(self, features: Features):
        """Sets the features of this MidPriceResponse.


        :param features: The features of this MidPriceResponse.
        :type features: Features
        """

        self._features = features
